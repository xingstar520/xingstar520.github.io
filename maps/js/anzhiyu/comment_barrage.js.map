{"version":3,"file":"../../../js/anzhiyu/comment_barrage.js","names":["document","querySelector","commentBarrageConfig","maxBarrage","GLOBAL_CONFIG","barrageTime","twikooUrl","twikooEnvId","accessToken","mailMd5","pageUrl","window","location","pathname","barrageTimer","barrageList","barrageIndex","dom","commentInterval","hoverOnCommentBarrage","initCommentBarrage","data","JSON","stringify","event","url","xhr","XMLHttpRequest","withCredentials","addEventListener","this","readyState","responseText","commentLinkFilter","parse","innerHTML","open","setRequestHeader","send","clearInterval","setInterval","length","popCommentBarrage","removeCommentBarrage","shift","sort","a","b","created","newData","forEach","item","push","getCommentReplies","replies","barrage","createElement","className","nick","id","comment","querySelectorAll","pre","codePlaceholder","innerText","parentNode","replaceChild","image","classList","contains","style","display","placeholder","append","setTimeout","removeChild","observer","IntersectionObserver","entries","commentBarrage","postComment","getElementById","entry","body","clientWidth","bottom","isIntersecting","root","rootMargin","threshold","postCommentTarget","observe","localStorage","getItem","textContent"],"sources":["js/anzhiyu/comment_barrage.js"],"mappings":"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","ignoreList":[],"sourcesContent":["if (document.querySelector(\".comment-barrage\")) {\n  var commentBarrageConfig = {\n    maxBarrage: GLOBAL_CONFIG.commentBarrageConfig.maxBarrage,\n    barrageTime: GLOBAL_CONFIG.commentBarrageConfig.barrageTime,\n    twikooUrl: GLOBAL_CONFIG.twikooEnvId,\n    accessToken: GLOBAL_CONFIG.commentBarrageConfig.accessToken,\n    mailMd5: GLOBAL_CONFIG.commentBarrageConfig.mailMd5,\n    pageUrl: window.location.pathname,\n    barrageTimer: [],\n    barrageList: [],\n    barrageIndex: 0,\n    dom: document.querySelector(\".comment-barrage\"),\n  };\n  var commentInterval = null;\n  var hoverOnCommentBarrage = false;\n\n  document.querySelector(\".comment-barrage\").addEventListener(\"mouseenter\", function () {\n    hoverOnCommentBarrage = true;\n  });\n  document.querySelector(\".comment-barrage\").addEventListener(\"mouseleave\", function () {\n    hoverOnCommentBarrage = false;\n  });\n\n  function initCommentBarrage() {\n    if (!commentBarrageConfig.dom) return;\n\n    var data = JSON.stringify({\n      event: \"COMMENT_GET\",\n      \"commentBarrageConfig.accessToken\": commentBarrageConfig.accessToken,\n      url: commentBarrageConfig.pageUrl,\n    });\n    var xhr = new XMLHttpRequest();\n    xhr.withCredentials = true;\n    xhr.addEventListener(\"readystatechange\", function () {\n      if (this.readyState === 4 && this.responseText) {\n        commentBarrageConfig.barrageList = commentLinkFilter(JSON.parse(this.responseText).data);\n        commentBarrageConfig.dom.innerHTML = \"\";\n      }\n    });\n    xhr.open(\"POST\", commentBarrageConfig.twikooUrl);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.send(data);\n\n    clearInterval(commentInterval);\n    commentInterval = null;\n\n    commentInterval = setInterval(() => {\n      if (commentBarrageConfig.barrageList.length && !hoverOnCommentBarrage) {\n        popCommentBarrage(commentBarrageConfig.barrageList[commentBarrageConfig.barrageIndex]);\n        commentBarrageConfig.barrageIndex += 1;\n        commentBarrageConfig.barrageIndex %= commentBarrageConfig.barrageList.length;\n      }\n      if (\n        commentBarrageConfig.barrageTimer.length >\n          (commentBarrageConfig.barrageList.length > commentBarrageConfig.maxBarrage\n            ? commentBarrageConfig.maxBarrage\n            : commentBarrageConfig.barrageList.length) &&\n        !hoverOnCommentBarrage\n      ) {\n        removeCommentBarrage(commentBarrageConfig.barrageTimer.shift());\n      }\n    }, commentBarrageConfig.barrageTime);\n  }\n\n  function commentLinkFilter(data) {\n    data.sort((a, b) => {\n      return a.created - b.created;\n    });\n    let newData = [];\n    data.forEach(item => {\n      newData.push(...getCommentReplies(item));\n    });\n    return newData;\n  }\n\n  function getCommentReplies(item) {\n    if (item.replies) {\n      let replies = [item];\n      item.replies.forEach(item => {\n        replies.push(...getCommentReplies(item));\n      });\n      return replies;\n    } else {\n      return [];\n    }\n  }\n\n  function popCommentBarrage(data) {\n    let barrage = document.createElement(\"div\");\n    barrage.className = \"comment-barrage-item\";\n    barrage.innerHTML = `\n          <div class=\"barrageHead\">\n            <a class=\"barrageTitle ${\n              data.mailMd5 === commentBarrageConfig.mailMd5 ? \"barrageBloggerTitle\" : \"\"\n            }\" href=\"javascript:anzhiyu.scrollTo('#post-comment')\"\">\n              ${data.mailMd5 === commentBarrageConfig.mailMd5 ? \"博主\" : \"热评\"}\n            </a>\n            <div class=\"barrageNick\">${data.nick}</div>\n            <img class=\"nolazyload barrageAvatar\" src=\"https://cravatar.cn/avatar/${data.mailMd5}\"/>\n            <a class=\"comment-barrage-close\" href=\"javascript:anzhiyu.switchCommentBarrage()\"><i class=\"anzhiyufont anzhiyu-icon-xmark\"></i></a>\n          </div>\n          <anzhiyu class=\"barrageContent\" onClick=\"window.location.hash = '${data.id}'\">\n            ${data.comment}\n          </anzhiyu>\n        `;\n\n    // 获取anzhiyu标签内的所有pre元素\n    let anzhiyuPres = barrage.querySelectorAll(\"anzhiyu pre\");\n\n    // 遍历每个pre元素，将其替换为\"【代码】\"\n    anzhiyuPres.forEach(pre => {\n      let codePlaceholder = document.createElement(\"span\");\n      codePlaceholder.innerText = \"【代码】\";\n      pre.parentNode.replaceChild(codePlaceholder, pre);\n    });\n\n    // 获取anzhiyu标签内的所有图片元素\n    let anzhiyuImages = barrage.querySelectorAll(\"anzhiyu img\");\n\n    // 遍历每个图片元素，将其替换为\"【图片】\"，但排除带有class=tk-owo-emotion的图片\n    anzhiyuImages.forEach(image => {\n      if (!image.classList.contains(\"tk-owo-emotion\")) {\n        image.style.display = \"none\"; // 隐藏图片\n        let placeholder = document.createElement(\"span\");\n        placeholder.innerText = \"【图片】\";\n        image.parentNode.replaceChild(placeholder, image);\n      }\n    });\n    commentBarrageConfig.barrageTimer.push(barrage);\n    commentBarrageConfig.dom.append(barrage);\n  }\n\n  function removeCommentBarrage(barrage) {\n    barrage.className = \"comment-barrage-item out\";\n\n    setTimeout(() => {\n      if (commentBarrageConfig.dom && commentBarrageConfig.dom.contains(barrage)) {\n        commentBarrageConfig.dom.removeChild(barrage);\n      }\n    }, 1000);\n  }\n\n  // 自动隐藏\n  const commentEntryCallback = entries => {\n    const commentBarrage = document.querySelector(\".comment-barrage\");\n    const postComment = document.getElementById(\"post-comment\");\n\n    entries.forEach(entry => {\n      if (postComment && commentBarrage && document.body.clientWidth > 768) {\n        commentBarrage.style.bottom = entry.isIntersecting ? `-${commentBarrageConfig.maxBarrage * 200}px` : \"0\";\n      }\n    });\n  };\n  // 创建IntersectionObserver实例\n  const observer = new IntersectionObserver(commentEntryCallback, {\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 0,\n  });\n  // 监视目标元素\n  const postCommentTarget = document.getElementById(\"post-comment\");\n  if (postCommentTarget) {\n    observer.observe(postCommentTarget);\n  }\n\n  initCommentBarrage();\n\n  if (localStorage.getItem(\"commentBarrageSwitch\") !== \"false\") {\n    document.querySelector(\".comment-barrage\").style.display = \"flex\";\n    document.querySelector(\".menu-commentBarrage-text\").textContent = \"关闭热评\";\n  } else {\n    document.querySelector(\".comment-barrage\").style.display = \"none\";\n    document.querySelector(\".menu-commentBarrage-text\").textContent = \"显示热评\";\n  }\n\n  document.addEventListener(\"pjax:send\", function () {\n    clearInterval(commentInterval);\n  });\n}\n"]}
{"version":3,"file":"../../../js/search/algolia.js","names":["window","addEventListener","$searchMask","document","getElementById","$searchDialog","querySelector","openSearch","anzhiyu","animateIn","style","display","setTimeout","focus","f","event","code","closeSearch","removeEventListener","fixSafariHeight","anzhiyu_keyboard","keyCode","shiftKey","console","info","selectTextNow","t","value","dispatchEvent","Event","click","animateOut","innerWidth","setProperty","innerHeight","searchClickFn","addEventListenerPjax","algolia","GLOBAL_CONFIG","appId","apiKey","indexName","error","search","instantsearch","searchClient","algoliasearch","searchFunction","helper","state","query","innerLoading","innerHTML","configure","widgets","hitsPerPage","hits","per_page","searchBox","container","showReset","showSubmit","placeholder","languages","input_placeholder","showLoadingIndicator","searchOnEnterKeyPressOnly","searchAsYouType","templates","item","data","link","permalink","root","path","result","_highlightResult","loadingLogo","title","empty","hits_empty","replace","cssClasses","stats","text","hits_stats","nbHits","processingTimeMS","powerBy","poweredBy","pagination","totalPages","first","last","previous","next","scrollTo","showFirstLast","active","disabled","addWidgets","start","isHidden","pjax","on","refresh"],"sources":["js/search/algolia.js"],"mappings":"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","ignoreList":[],"sourcesContent":["window.addEventListener(\"load\", () => {\n  const $searchMask = document.getElementById(\"search-mask\");\n  const $searchDialog = document.querySelector(\"#algolia-search .search-dialog\");\n\n  const openSearch = () => {\n    anzhiyu.animateIn($searchMask, \"to_show 0.5s\");\n    $searchDialog.style.display = \"block\";\n    setTimeout(() => {\n      document.querySelector(\"#algolia-search .ais-SearchBox-input\").focus();\n    }, 100);\n\n    // shortcut: ESC\n    document.addEventListener(\"keydown\", function f(event) {\n      if (event.code === \"Escape\") {\n        closeSearch();\n        document.removeEventListener(\"keydown\", f);\n      }\n    });\n\n    fixSafariHeight();\n    window.addEventListener(\"resize\", fixSafariHeight);\n  };\n\n  // shortcut: shift+S\n  if (anzhiyu_keyboard) {\n    window.addEventListener(\"keydown\", function (event) {\n      if (event.keyCode == 83 && event.shiftKey) {\n        console.info(selectTextNow);\n        if (selectTextNow) {\n          openSearch();\n          const t = document.querySelector(\"#algolia-search-input > div > form > input\");\n          t.value = selectTextNow;\n          t.dispatchEvent(new Event(\"input\"));\n          setTimeout(() => {\n            document.querySelector(\"#algolia-search-input > div > form > button.ais-SearchBox-submit\").click();\n          }, 64);\n        } else {\n          openSearch();\n        }\n\n        return false;\n      }\n    });\n  }\n\n  const closeSearch = () => {\n    anzhiyu.animateOut($searchDialog, \"search_close .5s\");\n    anzhiyu.animateOut($searchMask, \"to_hide 0.5s\");\n    window.removeEventListener(\"resize\", fixSafariHeight);\n  };\n\n  // fix safari\n  const fixSafariHeight = () => {\n    if (window.innerWidth < 768) {\n      $searchDialog.style.setProperty(\"--search-height\", window.innerHeight + \"px\");\n    }\n  };\n\n  const searchClickFn = () => {\n    anzhiyu.addEventListenerPjax(document.querySelector(\"#search-button > .search\"), \"click\", openSearch);\n  };\n\n  const searchFnOnce = () => {\n    $searchMask.addEventListener(\"click\", closeSearch);\n    document.querySelector(\"#algolia-search .search-close-button\").addEventListener(\"click\", closeSearch);\n  };\n\n  const algolia = GLOBAL_CONFIG.algolia;\n  const isAlgoliaValid = algolia.appId && algolia.apiKey && algolia.indexName;\n  if (!isAlgoliaValid) {\n    return console.error(\"Algolia setting is invalid!\");\n  }\n\n  const search = instantsearch({\n    indexName: algolia.indexName,\n    /* global algoliasearch */\n    searchClient: algoliasearch(algolia.appId, algolia.apiKey),\n    searchFunction(helper) {\n      if (helper.state.query) {\n        let innerLoading = '<i class=\"anzhiyufont anzhiyu-icon-spinner anzhiyu-spin\"></i>';\n        document.getElementById(\"algolia-hits\").innerHTML = innerLoading;\n        helper.search();\n      }\n    },\n  });\n\n  const configure = instantsearch.widgets.configure({\n    hitsPerPage: algolia.hits.per_page ?? 5,\n  });\n\n  const searchBox = instantsearch.widgets.searchBox({\n    container: \"#algolia-search-input\",\n    showReset: false,\n    showSubmit: false,\n    placeholder: algolia.languages.input_placeholder,\n    showLoadingIndicator: true,\n    searchOnEnterKeyPressOnly: true,\n    searchAsYouType: false,\n  });\n\n  const hits = instantsearch.widgets.hits({\n    container: \"#algolia-hits\",\n    templates: {\n      item(data) {\n        const link = data.permalink ? data.permalink : GLOBAL_CONFIG.root + data.path;\n        const result = data._highlightResult;\n        const loadingLogo = document.querySelector(\"#algolia-hits .anzhiyu-spin\");\n        if (loadingLogo) {\n          loadingLogo.style.display = \"none\";\n        }\n        setTimeout(() => {\n          document.querySelector(\"#algolia-search .ais-SearchBox-input\").focus();\n        }, 200);\n        return `\n          <a href=\"${link}\" class=\"algolia-hit-item-link\">\n          <span class=\"algolia-hits-item-title\">${result.title.value || \"no-title\"}</span>\n          </a>`;\n      },\n      empty: function (data) {\n        const loadingLogo = document.querySelector(\"#algolia-hits .anzhiyu-spin\");\n        console.info(loadingLogo);\n        if (loadingLogo) {\n          loadingLogo.style.display = \"none\";\n        }\n        setTimeout(() => {\n          document.querySelector(\"#algolia-search .ais-SearchBox-input\").focus();\n        }, 200);\n        return (\n          '<div id=\"algolia-hits-empty\">' +\n          GLOBAL_CONFIG.algolia.languages.hits_empty.replace(/\\$\\{query}/, data.query) +\n          \"</div>\"\n        );\n      },\n    },\n    cssClasses: {\n      item: \"algolia-hit-item\",\n    },\n  });\n\n  const stats = instantsearch.widgets.stats({\n    container: \"#algolia-info > .algolia-stats\",\n    templates: {\n      text: function (data) {\n        const stats = GLOBAL_CONFIG.algolia.languages.hits_stats\n          .replace(/\\$\\{hits}/, data.nbHits)\n          .replace(/\\$\\{time}/, data.processingTimeMS);\n        return `<hr>${stats}`;\n      },\n    },\n  });\n\n  const powerBy = instantsearch.widgets.poweredBy({\n    container: \"#algolia-info > .algolia-poweredBy\",\n  });\n\n  const pagination = instantsearch.widgets.pagination({\n    container: \"#algolia-pagination\",\n    totalPages: algolia.hits.per_page ?? 5,\n    templates: {\n      first: '<i class=\"anzhiyufont anzhiyu-icon-angle-double-left\"></i>',\n      last: '<i class=\"anzhiyufont anzhiyu-icon-angle-double-right\"></i>',\n      previous: '<i class=\"anzhiyufont anzhiyu-icon-angle-left\"></i>',\n      next: '<i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>',\n    },\n    scrollTo: false,\n    showFirstLast: false,\n    cssClasses: {\n      root: \"pagination\",\n      item: \"pagination-item\",\n      link: \"page-number\",\n      active: \"current\",\n      disabled: \"disabled-item\",\n    },\n  });\n\n  search.addWidgets([configure, searchBox, hits, stats, powerBy, pagination]); // add the widgets to the instantsearch instance\n\n  search.start();\n\n  searchClickFn();\n  searchFnOnce();\n\n  window.addEventListener(\"pjax:complete\", () => {\n    !anzhiyu.isHidden($searchMask) && closeSearch();\n    searchClickFn();\n  });\n\n  window.pjax &&\n    search.on(\"render\", () => {\n      window.pjax.refresh(document.getElementById(\"algolia-hits\"));\n    });\n});\n"]}
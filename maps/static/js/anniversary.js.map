{"version":3,"file":"../../../static/js/anniversary.js","names":["initializeAnniversary","LunarDate","Year","Month","Day","solar","Lunar","fromYmdHms","getSolar","Date","getYear","getMonth","getDay","error","daysBetween","date1","date2","Math","ceil","countdownElements","document","querySelectorAll","totalDaysElements","targetDateElements","forEach","elem","dateStr","getAttribute","isLunar","hasAttribute","textContent","split","map","Number","anniversaryDate","now","getFullYear","getDate","daysLeft","startDate","totalDays","toString","padStart","targetDate","addEventListener"],"sources":["static/js/anniversary.js"],"mappings":"AAEA,SAASA,wBACL,SAASC,EAAUC,EAAMC,EAAOC,GAC5B,IACI,IAAIC,EAAQC,MAAMC,WAAWL,EAAMC,EAAOC,EAAK,EAAG,EAAG,GAAGI,WACxD,OAAO,IAAIC,KAAKJ,EAAMK,UAAWL,EAAMM,WAAa,EAAGN,EAAMO,SACjE,CAAE,MAAOC,GACL,OAAOZ,EAAUC,EAAMC,EAAOC,EAAM,EACxC,CACJ,CAEA,SAASU,EAAYC,EAAOC,GAExB,OAAOC,KAAKC,MAAMF,EAAQD,GADX,MAEnB,CA2DA,MAAMI,EAAoBC,SAASC,iBAAiB,cAC9CC,EAAoBF,SAASC,iBAAiB,eAC9CE,EAAqBH,SAASC,iBAAiB,gBAErDF,EAAkBK,SAAQ,SAAUC,GAChC,MAAMC,EAAUD,EAAKE,aAAa,aAC5BC,EAAUH,EAAKI,aAAa,cAClCJ,EAAKK,YAhET,SAAkBJ,EAASE,GACvB,MAAO1B,EAAMC,EAAOC,GAAOsB,EAAQK,MAAM,KAAKC,IAAIC,QAClD,IAEIC,EAFAC,EAAM,IAAI1B,KAcd,OAbA0B,EAAM,IAAI1B,KAAK0B,EAAIC,cAAeD,EAAIxB,WAAYwB,EAAIE,WAElDT,GACAM,EAAkBjC,EAAUkC,EAAIC,cAAejC,EAAOC,GAClD8B,EAAkBC,IAClBD,EAAkBjC,EAAUkC,EAAIC,cAAgB,EAAGjC,EAAOC,MAG9D8B,EAAkB,IAAIzB,KAAK0B,EAAIC,cAAejC,EAAQ,EAAGC,GACrD8B,EAAkBC,IAClBD,EAAkB,IAAIzB,KAAK0B,EAAIC,cAAgB,EAAGjC,EAAQ,EAAGC,KAG9DU,EAAYqB,EAAKD,EAC5B,CA+CuBI,CAASZ,EAASE,EACzC,IAEAN,EAAkBE,SAAQ,SAAUC,GAChC,MAAMC,EAAUD,EAAKE,aAAa,aAC5BC,EAAUH,EAAKI,aAAa,cAClCJ,EAAKK,YAnDT,SAAmBJ,EAASE,GACxB,MAAO1B,EAAMC,EAAOC,GAAOsB,EAAQK,MAAM,KAAKC,IAAIC,QAClD,IAEIM,EAFAJ,EAAM,IAAI1B,KAQd,OAPA0B,EAAM,IAAI1B,KAAK0B,EAAIC,cAAeD,EAAIxB,WAAYwB,EAAIE,WAGlDE,EADAX,EACY3B,EAAUC,EAAMC,EAAOC,GAEvB,IAAIK,KAAKP,EAAMC,EAAQ,EAAGC,GAEnCU,EAAYyB,EAAWJ,EAClC,CAwCuBK,CAAUd,EAASE,EAC1C,IAGAL,EAAmBC,SAAQ,SAAUC,GACjC,MAAMC,EAAUD,EAAKE,aAAa,aAC5BC,EAAUH,EAAKI,aAAa,cAClCJ,EAAKK,YA7CT,SAAoBJ,EAASE,GACzB,MAAO1B,EAAMC,EAAOC,GAAOsB,EAAQK,MAAM,KAAKC,IAAIC,QAClD,IAEIC,EAFAC,EAAM,IAAI1B,KAkBd,OAjBA0B,EAAM,IAAI1B,KAAK0B,EAAIC,cAAeD,EAAIxB,WAAYwB,EAAIE,WAElDT,GACAM,EAAkBjC,EAAUkC,EAAIC,cAAejC,EAAOC,GAClD8B,EAAkBC,IAClBD,EAAkBjC,EAAUkC,EAAIC,cAAgB,EAAGjC,EAAOC,MAG9D8B,EAAkB,IAAIzB,KAAK0B,EAAIC,cAAejC,EAAQ,EAAGC,GACrD8B,EAAkBC,IAClBD,EAAkB,IAAIzB,KAAK0B,EAAIC,cAAgB,EAAGjC,EAAQ,EAAGC,KAO9D,GAHM8B,EAAgBE,kBACdF,EAAgBvB,WAAa,GAAG8B,WAAWC,SAAS,EAAG,QAC1DR,EAAgBG,UAAUI,WAAWC,SAAS,EAAG,MAIjE,CAsBuBC,CAAWjB,EAASE,EAC3C,GACJ,CAGAR,SAASwB,iBAAiB,mBAAoB5C,uBAG9CoB,SAASwB,iBAAiB,gBAAiB5C","ignoreList":[],"sourcesContent":["// anniversary.js\n\nfunction initializeAnniversary() {\n    function LunarDate(Year, Month, Day) {\n        try {\n            let solar = Lunar.fromYmdHms(Year, Month, Day, 0, 0, 0).getSolar();\n            return new Date(solar.getYear(), solar.getMonth() - 1, solar.getDay());\n        } catch (error) {\n            return LunarDate(Year, Month, Day - 1);\n        }\n    }\n    // 计算两个日期之间的天数差\n    function daysBetween(date1, date2) {\n        const oneDay = 24 * 60 * 60 * 1000;\n        return Math.ceil((date2 - date1) / oneDay);\n    }\n    // 剩余天数\n    function daysLeft(dateStr, isLunar) {\n        const [Year, Month, Day] = dateStr.split(\"-\").map(Number);\n        let now = new Date();\n        now = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        let anniversaryDate;\n        if (isLunar) {\n            anniversaryDate = LunarDate(now.getFullYear(), Month, Day);\n            if (anniversaryDate < now) {\n                anniversaryDate = LunarDate(now.getFullYear() + 1, Month, Day);\n            }\n        } else {\n            anniversaryDate = new Date(now.getFullYear(), Month - 1, Day);\n            if (anniversaryDate < now) {\n                anniversaryDate = new Date(now.getFullYear() + 1, Month - 1, Day);\n            }\n        }\n        return daysBetween(now, anniversaryDate);\n    }\n    // 经过天数\n    function totalDays(dateStr, isLunar) {\n        const [Year, Month, Day] = dateStr.split(\"-\").map(Number);\n        let now = new Date();\n        now = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        let startDate;\n        if (isLunar) {\n            startDate = LunarDate(Year, Month, Day);\n        } else {\n            startDate = new Date(Year, Month - 1, Day);\n        }\n        return daysBetween(startDate, now);\n    }\n    // 返回目标日期\n    function targetDate(dateStr, isLunar) {\n        const [Year, Month, Day] = dateStr.split(\"-\").map(Number);\n        let now = new Date();\n        now = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        let anniversaryDate;\n        if (isLunar) {\n            anniversaryDate = LunarDate(now.getFullYear(), Month, Day);\n            if (anniversaryDate < now) {\n                anniversaryDate = LunarDate(now.getFullYear() + 1, Month, Day);\n            }\n        } else {\n            anniversaryDate = new Date(now.getFullYear(), Month - 1, Day);\n            if (anniversaryDate < now) {\n                anniversaryDate = new Date(now.getFullYear() + 1, Month - 1, Day);\n            }\n        }\n        // 手动拼接日期，确保月份和日期都是两位数\n        const year = anniversaryDate.getFullYear();\n        const month = (anniversaryDate.getMonth() + 1).toString().padStart(2, '0'); // 月份从0开始，需要加1\n        const day = anniversaryDate.getDate().toString().padStart(2, '0');\n        return `${year}-${month}-${day}`; // 使用'-'作为分隔符\n        //   return anniversaryDate.toDateString();  // 直接返回斜杆日期\n        // return anniversaryDate.toLocaleDateString('zh-CN');\n    }\n\n    const countdownElements = document.querySelectorAll(\".countdown\");\n    const totalDaysElements = document.querySelectorAll(\".total-days\");\n    const targetDateElements = document.querySelectorAll(\".target-date\");\n\n    countdownElements.forEach(function (elem) {\n        const dateStr = elem.getAttribute(\"data-date\");\n        const isLunar = elem.hasAttribute(\"data-lunar\");\n        elem.textContent = daysLeft(dateStr, isLunar);\n    });\n\n    totalDaysElements.forEach(function (elem) {\n        const dateStr = elem.getAttribute(\"data-date\");\n        const isLunar = elem.hasAttribute(\"data-lunar\");\n        elem.textContent = totalDays(dateStr, isLunar);\n    });\n\n    // 显示目标日期\n    targetDateElements.forEach(function (elem) {\n        const dateStr = elem.getAttribute(\"data-date\");\n        const isLunar = elem.hasAttribute(\"data-lunar\");\n        elem.textContent = targetDate(dateStr, isLunar);\n    });\n}\n\n// 初始页面加载\ndocument.addEventListener(\"DOMContentLoaded\", initializeAnniversary);\n\n// 适配 pjax\ndocument.addEventListener(\"pjax:complete\", initializeAnniversary);\n"]}